{"version":3,"sources":["pages/AllUsersPage.js","pages/CreateMenuPage.js","pages/UserMenuPage.js","pages/CreateMenuPageMat.js","components/Navbar.js","App.js","routes.js","serviceWorker.js","index.js"],"names":["AllUsersPage","useState","error","setError","isLoaded","setIsLoaded","menu","setMenu","users","setUsers","name","quantity","form","setForm","a","fetch","method","headers","body","JSON","stringify","response","ok","json","user","console","log","id","useEffect","then","res","result","DeleteHandler","event","DeleteUser","target","changeHandler","value","message","type","className","htmlFor","onChange","age","measure","onClick","Grid","container","spacing","item","xs","map","product","_id","style","height","Button","variant","color","CreateMenuPage","rows","document","querySelector","forEach","append","row","forms","elements","userName","userAge","parseInt","reset","userId","replaceWith","remove","e","preventDefault","tr","createElement","setAttribute","idTd","nameTd","ageTd","costTd","linksTd","editLink","addEventListener","GetUser","removeLink","appendChild","GetUsers","CreateUser","EditUser","UserMenuPage","setName","setQuantity","arr","setArr","Array","from","length","n","Table","validateEmail","email","test","String","toLowerCase","CreateMenuPageMat","setUser","iserror","setIserror","errorMessages","setErrorMessages","axios","get","data","title","columns","field","options","headerStyle","borderBottomColor","borderBottomWidth","fontFamily","actionsColumnIndex","editable","onRowUpdate","newData","oldData","Promise","resolve","errorList","push","username","phone","website","put","updateUser","tableData","catch","handleRowUpdate","onRowAdd","post","newUserdata","handleRowAdd","onRowDelete","delete","dataDelete","index","splice","handleRowDelete","Alert","severity","AlertTitle","msg","i","Navbar","padding","to","App","routes","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sRAOaA,EAAe,WACpB,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAwBR,mBAAS,CACLS,KAAM,GACNC,SAAU,KAFtC,mBAAOC,EAAP,KAAaC,EAAb,KAL0B,4CA4D1B,8BAAAC,EAAA,sEAE2BC,MAAM,WAAY,CACrCC,OAAQ,OACRC,QAAS,CAAE,OAAU,mBAAoB,eAAgB,oBACzDC,KAAMC,KAAKC,UAAU,CACjBV,KAAME,EAAKF,KACXC,SAAUC,EAAKD,aAP3B,WAUwB,KARdU,EAFV,QAUiBC,GAVjB,gCAW2BD,EAASE,OAXpC,OAWcC,EAXd,OAYQC,QAAQC,IAAIF,GAZpB,4CA5D0B,kEA+E1B,WAA0BG,GAA1B,eAAAb,EAAA,sEAC2BC,MAAM,aAAeY,EAAI,CAC5CX,OAAQ,SACRC,QAAS,CAAE,OAAU,sBAH7B,WAKwB,KAJdI,EADV,QAKiBC,GALjB,gCAO2BD,EAASE,OAPpC,cASQE,QAAQC,IAAI,YATpB,OAWID,QAAQC,IAAI,YAAaD,QAAQC,IAAIC,GAXzC,6CA/E0B,sBAW9BC,qBAAU,WACVb,MAAM,aACHc,MAAK,SAAAC,GAAG,OAAIA,EAAIP,UAChBM,MACC,SAACE,GACC1B,GAAY,GACZE,EAAQwB,MAIV,SAAC7B,GACCG,GAAY,GACZF,EAASD,QAGZ,IAEH0B,qBAAU,WACVb,MAAM,aACHc,MAAK,SAAAC,GAAG,OAAIA,EAAIP,UAChBM,MACC,SAACE,GACC1B,GAAY,GACZI,EAASsB,MAIX,SAAC7B,GACCG,GAAY,GACZF,EAASD,QAGZ,IAmDC,IAAM8B,EAAgB,SAAAC,IA9FI,oCAgGtBC,CAAWD,EAAME,OAAOR,KAGtBS,EAAgB,SAAAH,GAClBpB,EAAQ,2BAAKD,GAAN,kBAAaqB,EAAME,OAAOzB,KAAOuB,EAAME,OAAOE,UAM7D,OAAInC,EACO,yEAAcA,EAAMoC,WACnBlC,EAIN,qCACE,iHACA,uBAAMM,KAAK,WAAX,UACI,uBAAO6B,KAAK,SAAS7B,KAAK,KAAK2B,MAAM,KACrC,sBAAKG,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,+DACA,uBAAOD,UAAU,eAAe9B,KAAK,OAAO2B,MAAOzB,EAAKF,KACpDgC,SAAUN,OAElB,sBAAKI,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,uCACA,uBAAOD,UAAU,eAAe9B,KAAK,OAAO2B,MAAOzB,EAAK+B,SAE5D,sBAAKH,UAAU,aAAf,UACI,uBAAOC,QAAQ,WAAf,8CACA,uBAAOD,UAAU,eACT9B,KAAK,WACL2B,MAAOzB,EAAKD,SACZ+B,SAAUN,OAGtB,sBAAKI,UAAU,aAAf,UACI,uBAAOC,QAAQ,UAAf,8CACA,uBAAOD,UAAU,eAAe9B,KAAK,UAAU2B,MAAOzB,EAAKgC,aAE/D,qBAAKJ,UAAU,aAAf,SACI,wBAAQK,QA1IM,2CA0IeL,UAAU,yBAAvC,yEAIZ,eAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACA,kCACI,gCACI,+BACA,gEAAc,0DAAa,sEAG/B,gCAEK5C,EAAK6C,KAAI,SAAAC,GAAO,OACjB,+BACI,6BAAKA,EAAQ1C,OACb,6BAAK0C,EAAQT,MACb,6BAAKS,EAAQR,YAHRtC,EAAK+C,eAUtB,cAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACA,kCACI,gCACA,6BACK1C,EAAM2C,KAAI,SAAAd,GAAK,OAAM,6BAAKA,EAAM3B,cAGrC,gCACI,6BACCF,EAAM2C,KAAK,SAACC,GAAD,OACR,+BACSA,EAAQzC,SAASwC,KAAI,SAAAd,GAAK,OACvB,oBAAIiB,MAAO,CAAEC,OAAQ,IAArB,SAA4BlB,OAEhC,6BAAI,cAACmB,EAAA,EAAD,CACIC,QAAQ,YAAYC,MAAM,YAC1B/B,GAAKyB,EAAQC,IACbR,QAASb,EAHb,2CApErB,uFClHF2B,EAAiB,WAAM,4CAG5B,gCAAA7C,EAAA,sEAE2BC,MAAM,YAAa,CACtCC,OAAQ,MACRC,QAAS,CAAE,OAAU,sBAJ7B,WAOwB,KALdI,EAFV,QAOiBC,GAPjB,iCAS4BD,EAASE,OATrC,OAScf,EATd,OAUQiB,QAAQC,IAAIlB,GACRoD,EAAOC,SAASC,cAAc,SAClCtD,EAAMuD,SAAQ,SAAAvC,GAEVoC,EAAKI,OAAOC,EAAIzC,OAd5B,6CAH4B,kEAsB5B,WAAuBG,GAAvB,mBAAAb,EAAA,sEAC2BC,MAAM,aAAeY,EAAI,CAC5CX,OAAQ,MACRC,QAAS,CAAE,OAAU,sBAH7B,WAKwB,KAJdI,EADV,QAKiBC,GALjB,iCAM2BD,EAASE,OANpC,OAMcC,EANd,QAOcZ,EAAOiD,SAASK,MAAT,UACRC,SAAL,GAAoB9B,MAAQb,EAAK6B,IACjCzC,EAAKuD,SAAL,KAAsB9B,MAAQb,EAAKd,KACnCE,EAAKuD,SAAL,IAAqB9B,MAAQb,EAAKmB,IAClC/B,EAAKuD,SAAL,QAAyB9B,MAAQb,EAAKoB,QAX9C,6CAtB4B,kEAqC5B,WAA0BwB,EAAUC,EAASzB,GAA7C,iBAAA9B,EAAA,sEAE2BC,MAAM,WAAY,CACrCC,OAAQ,OACRC,QAAS,CAAE,OAAU,mBAAoB,eAAgB,oBACzDC,KAAMC,KAAKC,UAAU,CACjBV,KAAM0D,EACNzB,IAAK2B,SAASD,EAAS,IACvBzB,QAASA,MARrB,WAWwB,KATdvB,EAFV,QAWiBC,GAXjB,gCAY2BD,EAASE,OAZpC,OAYcC,EAZd,OAaQ+C,IACAV,SAASC,cAAc,SAASE,OAAOC,EAAIzC,IAdnD,4CArC4B,kEAuD5B,WAAwBgD,EAAQJ,EAAUC,EAASzB,GAAnD,iBAAA9B,EAAA,sEAC2BC,MAAM,WAAY,CACrCC,OAAQ,MACRC,QAAS,CAAE,OAAU,mBAAoB,eAAgB,oBACzDC,KAAMC,KAAKC,UAAU,CACjBO,GAAI6C,EACJ9D,KAAM0D,EACNzB,IAAK2B,SAASD,EAAS,IACvBzB,QAASA,MARrB,WAWwB,KAVdvB,EADV,QAWiBC,GAXjB,gCAY2BD,EAASE,OAZpC,OAYcC,EAZd,OAaQ+C,IACAV,SAASC,cAAc,kBAAoBtC,EAAK6B,IAAM,MAAMoB,YAAYR,EAAIzC,IAdpF,4CAvD4B,kEAyE5B,WAA0BG,GAA1B,iBAAAb,EAAA,sEAC2BC,MAAM,aAAeY,EAAI,CAC5CX,OAAQ,SACRC,QAAS,CAAE,OAAU,sBAH7B,WAKwB,KAJdI,EADV,QAKiBC,GALjB,gCAM2BD,EAASE,OANpC,OAMcC,EANd,OAOQqC,SAASC,cAAc,kBAAoBtC,EAAK6B,IAAM,MAAMqB,SAPpE,4CAzE4B,sBAqF5B,SAASH,EAAMI,GACXA,EAAEC,iBACF,IAAMhE,EAAOiD,SAASK,MAAT,SACbtD,EAAK2D,QACL3D,EAAKuD,SAAL,GAAoB9B,MAAQ,EAGhC,SAAS4B,EAAIzC,GAET,IAAMqD,EAAKhB,SAASiB,cAAc,MAClCD,EAAGE,aAAa,aAAcvD,EAAK6B,KAEnC,IAAM2B,EAAOnB,SAASiB,cAAc,MACpCE,EAAKhB,OAAOxC,EAAK6B,KACjBwB,EAAGb,OAAOgB,GAEV,IAAMC,EAASpB,SAASiB,cAAc,MACtCG,EAAOjB,OAAOxC,EAAKd,MACnBmE,EAAGb,OAAOiB,GAEV,IAAMC,EAAQrB,SAASiB,cAAc,MACrCI,EAAMlB,OAAOxC,EAAKmB,KAClBkC,EAAGb,OAAOkB,GAEV,IAAMC,EAAStB,SAASiB,cAAc,MACtCK,EAAOnB,OAAOxC,EAAKoB,SACnBiC,EAAGb,OAAOmB,GAEV,IAAMC,EAAUvB,SAASiB,cAAc,MAEjCO,EAAWxB,SAASiB,cAAc,KACxCO,EAASN,aAAa,UAAWvD,EAAK6B,KACtCgC,EAASN,aAAa,QAAS,gCAC/BM,EAASrB,OAAO,oDAChBqB,EAASC,iBAAiB,SAAS,SAAAX,GAE/BA,EAAEC,iBAzHkB,oCA0HpBW,CAAQ/D,EAAK6B,QAEjB+B,EAAQpB,OAAOqB,GAEf,IAAMG,EAAa3B,SAASiB,cAAc,KAa1C,OAZAU,EAAWT,aAAa,UAAWvD,EAAK6B,KACxCmC,EAAWT,aAAa,QAAS,gCACjCS,EAAWxB,OAAO,8CAClBwB,EAAWF,iBAAiB,SAAS,SAAAX,GAEjCA,EAAEC,iBApIkB,oCAqIpB1C,CAAWV,EAAK6B,QAGpB+B,EAAQpB,OAAOwB,GACfX,EAAGY,YAAYL,GAERP,EAqBjB,OAhKkC,mCA8J5Ba,GAGJ,mCACA,sBAAKlD,UAAU,MAAf,UACM,qGACN,uBAAM9B,KAAK,WAAX,UACI,uBAAO6B,KAAK,SAAS7B,KAAK,KAAK2B,MAAM,MACrC,sBAAKG,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,+DACA,uBAAOD,UAAU,eAAe9B,KAAK,YAEzC,sBAAK8B,UAAU,aAAf,UACI,uBAAOC,QAAQ,MAAf,uCACA,uBAAOD,UAAU,eAAe9B,KAAK,WAEzC,sBAAK8B,UAAU,aAAf,UACI,uBAAOC,QAAQ,UAAf,8CACA,uBAAOD,UAAU,eAAe9B,KAAK,eAEzC,sBAAK8B,UAAU,aAAf,UACI,wBAAQK,QAnCZ,WAEM,IAAMjC,EAAOiD,SAASK,MAAT,SACbzC,QAAQC,IAAId,GACZ,IAAMe,EAAKf,EAAKuD,SAAL,GAAoB9B,MACzB3B,EAAOE,EAAKuD,SAAL,KAAsB9B,MAC7BM,EAAM/B,EAAKuD,SAAL,IAAqB9B,MAC3BO,EAAUhC,EAAKuD,SAAL,QAAyB9B,MAC9B,IAAPV,EAxJkB,wCAyJlBgE,CAAWjF,EAAMiC,EAAKC,GAzJJ,0CA2JlBgD,CAASjE,EAAIjB,EAAMiC,EAAKC,IAwBDJ,UAAU,yBAAvC,oEACA,mBAAGb,GAAG,QAAQkB,QAAS0B,EAAO/B,UAAU,yBAAxC,oEAGR,wBAAOA,UAAU,qDAAjB,UACI,gCAAO,+BAAI,oCAAW,oDAAY,0DAAa,sEAC/C,mC,SCvLKqD,EAAe,WACpB,MAA0B5F,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAwBN,mBAAS,IAAjC,mBAAOS,EAAP,KAAaoF,EAAb,KACA,EAAgC7F,mBAAS,IAAzC,mBAAOU,EAAP,KAAiBoF,EAAjB,KACA,EAAsB9F,mBAAS,IAA/B,mBAAO+F,EAAP,KAAYC,EAAZ,KAN0B,4CA6B1B,8BAAAnF,EAAA,6DACNW,QAAQC,IAAI,QADN,SAE2BX,MAAM,WAAY,CACrCC,OAAQ,OACRC,QAAS,CAAE,OAAU,mBAAoB,eAAgB,oBACzDC,KAAMC,KAAKC,UAAU,CACjBV,KAAMA,EACNC,SAAUA,MAPtB,WAUwB,KARdU,EAFV,QAUiBC,GAVjB,gCAW2BD,EAASE,OAXpC,OAWcC,EAXd,OAYQC,QAAQC,IAAIF,GAZpB,4CA7B0B,sBAS9BI,qBAAU,WACVb,MAAM,aACHc,MAAK,SAAAC,GAAG,OAAIA,EAAIP,UAChBM,MACC,SAACE,GACC1B,GAAY,GACZE,EAAQwB,GACRkE,EAAOC,MAAMC,KAAK,CAAEC,OAAQrE,EAAOqE,SAAU,kBAAM,SAIrD,SAAClG,GACCG,GAAY,GACZF,EAASD,QAGd,IAoBG,IAMMkC,EAAgB,SAACH,GACnB+D,EAAI/D,EAAME,OAAOR,IAAMM,EAAME,OAAOE,MACpC0D,EAAYC,GACZvE,QAAQC,IAAIqE,IAIpB,OAAI7F,EACO,yEAAcA,EAAMoC,WACnBlC,EAIN,qCACE,2GACA,uBAAMoC,UAAU,WAAhB,UACI,uBAAOD,KAAK,SAAS7B,KAAK,KAAK2B,MAAM,KACrC,sBAAKG,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,0DACA,uBAAOD,UAAU,eAAe9B,KAAK,OAAO2B,MAAO3B,EAC/CgC,SA1BA,SAACT,GACb,IAAMoE,EAAIpE,EAAME,OAAOE,MACvByD,EAAQO,GACR5E,QAAQC,IAAIhB,SAyBR,qBAAK8B,UAAU,aAAf,SACI,wBAAQK,QA1EM,2CA0EeL,UAAU,yBAAvC,yEAIR,eAAC8D,EAAA,EAAD,WACI,gCACA,+BACI,gEAAc,0DAAa,iEAAe,sEAG9C,gCACChG,EAAK6C,KAAK,SAACC,EAASzB,GAAV,OACX,+BACI,6BAAKyB,EAAQ1C,OACb,6BAAK0C,EAAQT,MACb,6BAAKS,EAAQR,UACb,6BAAI,uBAAOJ,UAAU,eACT9B,KAAK,WACLiB,GAAIA,EACJe,SAAUN,QAPfgB,EAAQC,gBAzBpB,uF,wECzDTkD,EAAgB,SAACC,GAErB,MADW,ibACDC,KAAKC,OAAOF,GAAOG,gBAwLhBC,EApLW,WAExB,MAAwB3G,mBAAS,IAAjC,mBAAOuB,EAAP,KAAaqF,EAAb,KACA,EAA8B5G,oBAAS,GAAvC,mBAAO6G,EAAP,KAAgBC,EAAhB,KACA,EAA0C9G,mBAAS,IAAnD,mBAAO+G,EAAP,KAAsBC,EAAtB,KAcArF,qBAAU,WACRsF,IAAMC,IAAN,8CACGtF,MAAK,SAAAC,GACJ,IAAMtB,EAAQsB,EAAIsF,KAClBP,EAAQrG,QAGX,IA+GH,OACE,sBAAKgC,UAAU,MAAf,UACE,kFADF,IAC4D,uBAAM,uBAEhE,cAAC,IAAD,CACE6E,MAAM,eACNC,QAxIQ,CACZ,CAAED,MAAO,OAAQE,MAAO,QACxB,CAAEF,MAAO,WAAYE,MAAO,YAC5B,CAAEF,MAAO,QAASE,MAAO,SACzB,CAAEF,MAAO,QAASE,MAAO,SACzB,CAAEF,MAAO,UAAWE,MAAO,YAoIvBH,KAAM5F,EACNgG,QAAS,CACPC,YAAa,CAAEC,kBAAmB,MAAOC,kBAAmB,MAAOC,WAAY,WAC/EC,oBAAqB,GAEvBC,SAAU,CACRC,YAAa,SAACC,EAASC,GAAV,OACX,IAAIC,SAAQ,SAACC,IAxHC,SAACH,EAASC,EAASE,GAEzC,IAAIC,EAAY,GACK,KAAjBJ,EAAQtH,MACV0H,EAAUC,KAAK,8CAEQ,KAArBL,EAAQM,UACVF,EAAUC,KAAK,kDAEK,KAAlBL,EAAQxB,QAAiD,IAAjCD,EAAcyB,EAAQxB,QAChD4B,EAAUC,KAAK,sCAEK,KAAlBL,EAAQO,OACVH,EAAUC,KAAK,gDAEO,KAApBL,EAAQQ,SACVJ,EAAUC,KAAK,kDAGbD,EAAUhC,OAAS,EACrBc,IAAMuB,IAAN,qDAAwDT,EAAQrG,IAAMqG,GACnEnG,MAAK,SAAAR,GACJ,IAAMqH,EAAU,YAAOlH,GAEvBkH,EADcT,EAAQU,UAAUhH,IACZqG,EACpBnB,EAAQ,YAAI6B,IACZP,IACApB,GAAW,GACXE,EAAiB,OAElB2B,OAAM,SAAA1I,GACL+G,EAAiB,CAAC,gCAClBF,GAAW,GACXoB,QAIJlB,EAAiBmB,GACjBrB,GAAW,GACXoB,KAkFQU,CAAgBb,EAASC,EAASE,OAGtCW,SAAU,SAACd,GAAD,OACR,IAAIE,SAAQ,SAACC,IA7DF,SAACH,EAASG,GAE7B,IAAIC,EAAY,GACK,KAAjBJ,EAAQtH,MACV0H,EAAUC,KAAK,8CAEQ,KAArBL,EAAQM,UACVF,EAAUC,KAAK,kDAEK,KAAlBL,EAAQxB,QAAiD,IAAjCD,EAAcyB,EAAQxB,QAChD4B,EAAUC,KAAK,sCAEK,KAAlBL,EAAQO,OACVH,EAAUC,KAAK,gDAEO,KAApBL,EAAQQ,SACVJ,EAAUC,KAAK,kDAGbD,EAAUhC,OAAS,EACrBc,IAAM6B,KAAN,6CAAyDf,GACtDnG,MAAK,SAAAR,GACJ,IAAI2H,EAAW,YAAOxH,GACtBwH,EAAYX,KAAKL,GACjBnB,EAAQmC,GACRb,IACAlB,EAAiB,IACjBF,GAAW,MAEZ6B,OAAM,SAAA1I,GACL+G,EAAiB,CAAC,mCAClBF,GAAW,GACXoB,QAGJlB,EAAiBmB,GACjBrB,GAAW,GACXoB,KAyBQc,CAAajB,EAASG,OAE1Be,YAAa,SAACjB,GAAD,OACX,IAAIC,SAAQ,SAACC,IAnFC,SAACF,EAASE,GAChCjB,IAAMiC,OAAN,qDAA2DlB,EAAQtG,KAChEE,MAAK,SAAAR,GACJ,IAAM+H,EAAU,YAAO5H,GACjB6H,EAAQpB,EAAQU,UAAUhH,GAChCyH,EAAWE,OAAOD,EAAO,GACzBxC,EAAQ,YAAIuC,IACZjB,OAEDS,OAAM,SAAA1I,GACL+G,EAAiB,CAAC,gCAClBF,GAAW,GACXoB,OAwEMoB,CAAgBtB,EAASE,UAKjC,8BACGrB,GACC,eAAC0C,EAAA,EAAD,CAAOC,SAAS,QAAhB,UACE,cAACC,EAAA,EAAD,oBACC1C,EAAc7D,KAAI,SAACwG,EAAKC,GACvB,OAAO,8BAAcD,GAAJC,eCrLlBC,EAAS,WAEpB,OACE,8BACE,sBAAKrH,UAAU,4BAA4Bc,MAAO,CAAEwG,QAAS,UAA7D,UACE,sBAAMtH,UAAU,aAAhB,oEACA,qBAAIb,GAAG,aAAaa,UAAU,6BAA9B,UACE,6BAAI,cAAC,IAAD,CAAMuH,GAAG,IAAT,+FACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,QAAT,yFACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,UAAT,mFACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,cAAT,qG,OCMCC,MAbf,WACE,IAAMC,ECMF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,qBAAK7G,MAAO,CAAEwG,QAAS,QAAvB,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAOI,KAAK,QAAQC,OAAK,EAAzB,SACE,qBAAK7G,MAAO,CAAEwG,QAAS,QAAvB,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAOI,KAAK,UAAUC,OAAK,EAA3B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,cAAcC,OAAK,EAA/B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUJ,GAAG,eDrBnB,OACI,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKvH,UAAU,YAAf,SACGyH,QEDSG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,EAAD,IAAS7G,SAAS8G,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjJ,MAAK,SAAAkJ,GACjCA,EAAaC,kB","file":"static/js/main.c9800e30.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n    \r\nexport const AllUsersPage = () => { \r\n        const [error, setError] = useState(null);\r\n        const [isLoaded, setIsLoaded] = useState(false);       \r\n        const [menu, setMenu] = useState([]);\r\n        const [users, setUsers] = useState([]);\r\n        const [form, setForm] = useState({\r\n                                    name: '',\r\n                                    quantity: ''\r\n        });            \r\n\r\n\r\n    useEffect(() => {\r\n    fetch(\"/api/menu\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);  \r\n          setMenu(result);\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n    fetch(\"/api/user\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);  \r\n          setUsers(result);\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n    }, []);\r\n\r\n    \r\n    // Получение одного пользователя\r\n    // async function GetUser(id) {\r\n    //     const response = await fetch(\"/api/menu/\" + id, {\r\n    //         method: \"GET\",\r\n    //         headers: { \"Accept\": \"application/json\" }\r\n    //     });\r\n    //     if (response.ok === true) {\r\n    //         const user = await response.json();                \r\n    //         setForm(user);                \r\n    //         console.log(\"user\"); console.log(user);                \r\n    //     }\r\n    // };\r\n\r\n    // Добавление пользователя\r\n        async function CreateUser() {\r\n  \r\n            const response = await fetch(\"api/user\", {\r\n                method: \"POST\",\r\n                headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    name: form.name,                    \r\n                    quantity: form.quantity                   \r\n                })\r\n            });\r\n            if (response.ok === true) {\r\n                const user = await response.json();\r\n                console.log(user);\r\n                // reset();\r\n                // document.querySelector(\"tbody\").append(row(user));\r\n            }\r\n        }\r\n\r\n    // Удаление пользователя\r\n        async function DeleteUser(id) {\r\n            const response = await fetch(\"/api/user/\" + id, {\r\n                method: \"DELETE\",\r\n                headers: { \"Accept\": \"application/json\" }\r\n            });\r\n            if (response.ok === true) {              \r\n\r\n                const user = await response.json();\r\n\r\n                console.log(\"User id)\")\r\n            }\r\n            console.log(\"User id)\"); console.log(id);\r\n        }\r\n\r\n\r\n        const DeleteHandler = event => {\r\n            \r\n            DeleteUser(event.target.id);\r\n        }\r\n\r\n        const changeHandler = event => {\r\n            setForm({ ...form, [event.target.name]: event.target.value });            \r\n        }\r\n\r\n\r\n\t// Условный рендеринг компонента\r\n\r\n    if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Загрузка...</div>;\r\n    } else {\r\n        return (\r\n          <>\r\n            <h5>Все посетители</h5>\r\n            <form name=\"userForm\">\r\n                <input type=\"hidden\" name=\"id\" value=\"\" />\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Название:</label>\r\n                    <input className=\"form-control\" name=\"name\" value={form.name}\r\n                        onChange={changeHandler} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"cost\">Цена:</label>\r\n                    <input className=\"form-control\" name=\"cost\" value={form.age} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"quantity\">Кол-во:</label>\r\n                    <input className=\"form-control\"\r\n                            name=\"quantity\"\r\n                            value={form.quantity}\r\n                            onChange={changeHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"measure\">Ед.изм:</label>\r\n                    <input className=\"form-control\" name=\"measure\" value={form.measure} />\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <button onClick={CreateUser} className=\"btn btn-sm btn-primary\">Сохранить</button>                    \r\n                </div>\r\n            </form>\r\n\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={6}>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                    <th>Блюдо</th><th>Цена</th><th>Ед.изм</th>\r\n                        </tr>\r\n                </thead>           \r\n                <tbody>\r\n\r\n                    {menu.map(product => (\r\n                    <tr key={menu._id}>    \r\n                        <td>{product.name}</td>\r\n                        <td>{product.age}</td>\r\n                        <td>{product.measure}</td>\r\n                    </tr>                                                                                \r\n                    ))}\r\n                </tbody>  \r\n            </table>           \r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    {users.map(value => ( <th>{value.name}</th> ))} \r\n                </tr>                \r\n                </thead>\r\n                <tbody>\r\n                    <tr>                  \r\n                    {users.map( (product) => (                      \r\n                        <td>                                                    \r\n                                {product.quantity.map(value => (                                     \r\n                                    <tr style={{ height: 55 }}>{value}</tr>                                    \r\n                                ))}\r\n                                <tr><Button \r\n                                        variant=\"contained\" color=\"secondary\"\r\n                                        id ={product._id}\r\n                                        onClick={DeleteHandler}>\r\n                                        Delete\r\n                                    </Button></tr>                                \r\n                        </td>                    \r\n                    ))}\r\n                    </tr>\r\n                </tbody>                \r\n            </table>\r\n            </Grid>\r\n\r\n         </Grid>   \r\n        </>\r\n        );\r\n  }\r\n}","import React from 'react'\r\n\r\nexport const CreateMenuPage = () => {  \r\n\r\n    // Получение меню\r\n        async function GetUsers() {\r\n            // отправляет запрос и получаем ответ\r\n            const response = await fetch(\"/api/menu\", {\r\n                method: \"GET\",\r\n                headers: { \"Accept\": \"application/json\" }\r\n            });\r\n            // если запрос прошел нормально\r\n            if (response.ok === true) {\r\n                // получаем данные\r\n                const users = await response.json();                \r\n                console.log(users);\r\n                let rows = document.querySelector(\"tbody\"); \r\n                users.forEach(user => {\r\n                    // добавляем полученные элементы в таблицу\r\n                    rows.append(row(user));\r\n                });                \r\n            }\r\n        }\r\n          // Получение одного пользователя\r\n        async function GetUser(id) {\r\n            const response = await fetch(\"/api/menu/\" + id, {\r\n                method: \"GET\",\r\n                headers: { \"Accept\": \"application/json\" }\r\n            });\r\n            if (response.ok === true) {\r\n                const user = await response.json();\r\n                const form = document.forms[\"userForm\"];\r\n                form.elements[\"id\"].value = user._id;\r\n                form.elements[\"name\"].value = user.name;\r\n                form.elements[\"age\"].value = user.age;\r\n                form.elements[\"measure\"].value = user.measure;\r\n            }\r\n        }\r\n        // Добавление пользователя\r\n        async function CreateUser(userName, userAge, measure) {\r\n  \r\n            const response = await fetch(\"api/menu\", {\r\n                method: \"POST\",\r\n                headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    name: userName,\r\n                    age: parseInt(userAge, 10),\r\n                    measure: measure\r\n                })\r\n            });\r\n            if (response.ok === true) {\r\n                const user = await response.json();\r\n                reset();\r\n                document.querySelector(\"tbody\").append(row(user));\r\n            }\r\n        }\r\n        // Изменение пользователя\r\n        async function EditUser(userId, userName, userAge, measure) {\r\n            const response = await fetch(\"api/menu\", {\r\n                method: \"PUT\",\r\n                headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    id: userId,\r\n                    name: userName,\r\n                    age: parseInt(userAge, 10),\r\n                    measure: measure\r\n                })\r\n            });\r\n            if (response.ok === true) {\r\n                const user = await response.json();\r\n                reset();\r\n                document.querySelector(\"tr[data-rowid='\" + user._id + \"']\").replaceWith(row(user));\r\n            }\r\n        }\r\n        // Удаление пользователя\r\n        async function DeleteUser(id) {\r\n            const response = await fetch(\"/api/menu/\" + id, {\r\n                method: \"DELETE\",\r\n                headers: { \"Accept\": \"application/json\" }\r\n            });\r\n            if (response.ok === true) {\r\n                const user = await response.json();\r\n                document.querySelector(\"tr[data-rowid='\" + user._id + \"']\").remove();\r\n            }\r\n        }\r\n  \r\n        // сброс формы\r\n        function reset(e) {\r\n            e.preventDefault();\r\n            const form = document.forms[\"userForm\"];\r\n            form.reset();\r\n            form.elements[\"id\"].value = 0;\r\n        }\r\n        // создание строки для таблицы\r\n        function row(user) {\r\n  \r\n            const tr = document.createElement(\"tr\");\r\n            tr.setAttribute(\"data-rowid\", user._id);\r\n  \r\n            const idTd = document.createElement(\"td\");\r\n            idTd.append(user._id);\r\n            tr.append(idTd);\r\n  \r\n            const nameTd = document.createElement(\"td\");\r\n            nameTd.append(user.name);\r\n            tr.append(nameTd);\r\n  \r\n            const ageTd = document.createElement(\"td\");\r\n            ageTd.append(user.age);\r\n            tr.append(ageTd);\r\n\r\n            const costTd = document.createElement(\"td\");\r\n            costTd.append(user.measure);\r\n            tr.append(costTd);\r\n              \r\n            const linksTd = document.createElement(\"td\");\r\n  \r\n            const editLink = document.createElement(\"a\");\r\n            editLink.setAttribute(\"data-id\", user._id);\r\n            editLink.setAttribute(\"style\", \"cursor:pointer;padding:15px;\");\r\n            editLink.append(\"Изменить\");\r\n            editLink.addEventListener(\"click\", e => {\r\n  \r\n                e.preventDefault();\r\n                GetUser(user._id);\r\n            });\r\n            linksTd.append(editLink);\r\n  \r\n            const removeLink = document.createElement(\"a\");\r\n            removeLink.setAttribute(\"data-id\", user._id);\r\n            removeLink.setAttribute(\"style\", \"cursor:pointer;padding:15px;\");\r\n            removeLink.append(\"Удалить\");\r\n            removeLink.addEventListener(\"click\", e => {\r\n  \r\n                e.preventDefault();\r\n                DeleteUser(user._id);\r\n            });\r\n  \r\n            linksTd.append(removeLink);\r\n            tr.appendChild(linksTd);\r\n  \r\n            return tr;\r\n        }\r\n        \r\n  \r\n        // отправка формы\r\n        function submitForm() {\r\n              // e.preventDefault();              \r\n              const form = document.forms[\"userForm\"];\r\n              console.log(form);\r\n              const id = form.elements[\"id\"].value;\r\n              const name = form.elements[\"name\"].value;\r\n              const age = form.elements[\"age\"].value;\r\n              const measure = form.elements[\"measure\"].value;\r\n              if (id === 0)\r\n                  CreateUser(name, age, measure);\r\n              else\r\n                  EditUser(id, name, age, measure);          \r\n        }\r\n        // загрузка пользователей\r\n        GetUsers();        \r\n\r\n  return (\r\n    <>    \r\n    <div className=\"row\">\r\n          <h5>Создать меню</h5>\r\n    <form name=\"userForm\">\r\n        <input type=\"hidden\" name=\"id\" value=\"0\" />\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Название:</label>\r\n            <input className=\"form-control\" name=\"name\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"age\">Цена:</label>\r\n            <input className=\"form-control\" name=\"age\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"measure\">Ед.изм:</label>\r\n            <input className=\"form-control\" name=\"measure\" />\r\n        </div>\r\n        <div className=\"panel-body\">\r\n            <button onClick={submitForm} className=\"btn btn-sm btn-primary\">Сохранить</button>\r\n            <a id=\"reset\" onClick={reset} className=\"btn btn-sm btn-primary\">Сбросить</a>\r\n        </div>\r\n    </form>\r\n    <table className=\"table table-condensed table-striped table-bordered\">\r\n        <thead><tr><th>Id</th><th>Имя</th><th>Цена</th><th>Ед.изм</th></tr></thead>\r\n        <tbody>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n  </>  \r\n  )\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport Table from '@material-ui/core/Table';\r\n\t\r\nexport const UserMenuPage = () => { \r\n        const [error, setError] = useState(null);\r\n        const [isLoaded, setIsLoaded] = useState(false);       \r\n        const [menu, setMenu] = useState([]);\r\n        const [name, setName] = useState('');\r\n        const [quantity, setQuantity] = useState([]);\r\n        const [arr, setArr] = useState([]);\r\n            \r\n\r\n    useEffect(() => {\r\n    fetch(\"/api/menu\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);  \r\n          setMenu(result);\r\n          setArr(Array.from({ length: result.length }, () => 0));\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])\t\r\n\t\r\n\r\n    // Добавление пользователя\r\n        async function CreateUser() {\r\n  console.log(\"user\");\r\n            const response = await fetch(\"api/user\", {\r\n                method: \"POST\",\r\n                headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    name: name,                    \r\n                    quantity: quantity                   \r\n                })\r\n            }); \r\n            if (response.ok === true) {\r\n                const user = await response.json();\r\n                console.log(user);                \r\n            }\r\n        }    \r\n\r\n        const getName = (event) => {\r\n            const n = event.target.value;\r\n            setName(n);\r\n            console.log(name);\r\n        }\r\n\r\n        const changeHandler = (event) => {             \r\n            arr[event.target.id] = event.target.value;\r\n            setQuantity(arr);         \r\n            console.log(setQuantity);\r\n        }\r\n\r\n\t// Условный рендеринг компонента\r\n    if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Загрузка...</div>;\r\n    } else {\r\n        return (\r\n          <>\r\n            <h5>Создать заказ</h5>\r\n            <form className=\"userForm\">\r\n                <input type=\"hidden\" name=\"id\" value=\"\" />\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Ваше Имя:</label>\r\n                    <input className=\"form-control\" name=\"name\" value={name}\r\n                        onChange={getName} />\r\n                </div>                \r\n                <div className=\"panel-body\">\r\n                    <button onClick={CreateUser} className=\"btn btn-sm btn-primary\">Сохранить</button>\r\n                    \r\n                </div>\r\n            </form>\r\n            <Table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Блюдо</th><th>Цена</th><th>Ед.изм</th><th>Кол-во</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {menu.map( (product, id) => (\r\n                <tr key = {product._id}>\r\n                    <td>{product.name}</td>\r\n                    <td>{product.age}</td>\r\n                    <td>{product.measure}</td>\r\n                    <td><input className=\"form-control\"\r\n                                name=\"quantity\"\r\n                                id={id}                            \r\n                                onChange={changeHandler}\r\n                        />\r\n                    </td>                                           \r\n                </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n        );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport './CreateMenuPageMat.css';\r\nimport axios from 'axios';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\n\r\n// regex for email validation\r\nconst validateEmail = (email) => {\r\n  const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\n\r\nconst CreateMenuPageMat = () => {\r\n\r\n  const [user, setUser] = useState([]);\r\n  const [iserror, setIserror] = useState(false);\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n\r\n  let columns = [\r\n    { title: 'NAME', field: 'name' },\r\n    { title: 'USERNAME', field: 'username' },\r\n    { title: 'EMAIL', field: 'email' },\r\n    { title: 'PHONE', field: 'phone' },\r\n    { title: 'WEBSITE', field: 'website' },\r\n  ]\r\n\r\n  // let data = [\r\n  //   { name: 'manish', username: 'traptrick', email: 'themk85@gmail.com', phone: '9999999999', website: 'https://github.com/traptrick' }\r\n  // ]  \r\n\r\n  useEffect(() => {\r\n    axios.get(`https://jsonplaceholder.typicode.com/users`)\r\n      .then(res => {\r\n        const users = res.data;\r\n        setUser(users);\r\n        // console.log(users);\r\n      })\r\n  }, [])\r\n\r\n\r\n\r\n  //function for updating the existing row details\r\n  const handleRowUpdate = (newData, oldData, resolve) => {\r\n    //validating the data inputs\r\n    let errorList = []\r\n    if (newData.name === \"\") {\r\n      errorList.push(\"Try Again, You didn't enter the name field\")\r\n    }\r\n    if (newData.username === \"\") {\r\n      errorList.push(\"Try Again, You didn't enter the Username field\")\r\n    }\r\n    if (newData.email === \"\" || validateEmail(newData.email) === false) {\r\n      errorList.push(\"Oops!!! Please enter a valid email\")\r\n    }\r\n    if (newData.phone === \"\") {\r\n      errorList.push(\"Try Again, Phone number field can't be blank\")\r\n    }\r\n    if (newData.website === \"\") {\r\n      errorList.push(\"Try Again, Enter website url before submitting\")\r\n    }\r\n\r\n    if (errorList.length < 1) {\r\n      axios.put(`https://jsonplaceholder.typicode.com/users/${newData.id}`, newData)\r\n        .then(response => {\r\n          const updateUser = [...user];\r\n          const index = oldData.tableData.id;\r\n          updateUser[index] = newData;\r\n          setUser([...updateUser]);\r\n          resolve()\r\n          setIserror(false)\r\n          setErrorMessages([])\r\n        })\r\n        .catch(error => {\r\n          setErrorMessages([\"Update failed! Server error\"])\r\n          setIserror(true)\r\n          resolve()\r\n\r\n        })\r\n    } else {\r\n      setErrorMessages(errorList)\r\n      setIserror(true)\r\n      resolve()\r\n\r\n    }\r\n  }\r\n\r\n\r\n  //function for deleting a row\r\n  const handleRowDelete = (oldData, resolve) => {\r\n    axios.delete(`https://jsonplaceholder.typicode.com/users/${oldData.id}`)\r\n      .then(response => {\r\n        const dataDelete = [...user];\r\n        const index = oldData.tableData.id;\r\n        dataDelete.splice(index, 1);\r\n        setUser([...dataDelete]);\r\n        resolve()\r\n      })\r\n      .catch(error => {\r\n        setErrorMessages([\"Delete failed! Server error\"])\r\n        setIserror(true)\r\n        resolve()\r\n      })\r\n  }\r\n\r\n\r\n  //function for adding a new row to the table\r\n  const handleRowAdd = (newData, resolve) => {\r\n    //validating the data inputs\r\n    let errorList = []\r\n    if (newData.name === \"\") {\r\n      errorList.push(\"Try Again, You didn't enter the name field\")\r\n    }\r\n    if (newData.username === \"\") {\r\n      errorList.push(\"Try Again, You didn't enter the Username field\")\r\n    }\r\n    if (newData.email === \"\" || validateEmail(newData.email) === false) {\r\n      errorList.push(\"Oops!!! Please enter a valid email\")\r\n    }\r\n    if (newData.phone === \"\") {\r\n      errorList.push(\"Try Again, Phone number field can't be blank\")\r\n    }\r\n    if (newData.website === \"\") {\r\n      errorList.push(\"Try Again, Enter website url before submitting\")\r\n    }\r\n\r\n    if (errorList.length < 1) {\r\n      axios.post(`https://jsonplaceholder.typicode.com/users`, newData)\r\n        .then(response => {\r\n          let newUserdata = [...user];\r\n          newUserdata.push(newData);\r\n          setUser(newUserdata);\r\n          resolve()\r\n          setErrorMessages([])\r\n          setIserror(false)\r\n        })\r\n        .catch(error => {\r\n          setErrorMessages([\"Cannot add data. Server error!\"])\r\n          setIserror(true)\r\n          resolve()\r\n        })\r\n    } else {\r\n      setErrorMessages(errorList)\r\n      setIserror(true)\r\n      resolve()\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Material Table Example Using JSONPlaceholder API</h1> <br /><br />\r\n\r\n      <MaterialTable\r\n        title=\"User Details\"\r\n        columns={columns}\r\n        data={user}\r\n        options={{\r\n          headerStyle: { borderBottomColor: 'red', borderBottomWidth: '3px', fontFamily: 'verdana' },\r\n          actionsColumnIndex: -1\r\n        }}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve) => {\r\n              handleRowUpdate(newData, oldData, resolve);\r\n\r\n            }),\r\n          onRowAdd: (newData) =>\r\n            new Promise((resolve) => {\r\n              handleRowAdd(newData, resolve)\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              handleRowDelete(oldData, resolve)\r\n            }),\r\n        }}\r\n      />\r\n\r\n      <div>\r\n        {iserror &&\r\n          <Alert severity=\"error\">\r\n            <AlertTitle>ERROR</AlertTitle>\r\n            {errorMessages.map((msg, i) => {\r\n              return <div key={i}>{msg}</div>\r\n            })}\r\n          </Alert>\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateMenuPageMat;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Navbar = () => {   \r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue darken-1\" style={{ padding: '0 2rem' }}>\r\n        <span className=\"brand-logo\">Навигация</span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li><Link to=\"/\">Все посетители</Link></li>\r\n          <li><Link to=\"/user\">Создать заказ</Link></li>\r\n          <li><Link to=\"/create\">Создать меню</Link></li>\r\n          <li><Link to=\"/create_mat\">Создать меню Material</Link></li>         \r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport {useRoutes} from './routes'\r\nimport {Navbar} from './components/Navbar'\r\nimport 'materialize-css'\r\n\r\nfunction App() {   \r\n  const routes = useRoutes()  \r\n\r\n  return (    \r\n      <Router>                        \r\n        <Navbar />\r\n        <div className=\"container\">\r\n          {routes}\r\n        </div>\r\n      </Router>    \r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nimport {AllUsersPage} from './pages/AllUsersPage'\r\nimport {CreateMenuPage} from './pages/CreateMenuPage'\r\nimport {UserMenuPage} from './pages/UserMenuPage'\r\n\r\nimport CreateMenuPageMat from './pages/CreateMenuPageMat'\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n\r\n  // if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <div style={{ padding: '30px' }}>          \r\n            <AllUsersPage />\r\n          </div>\r\n        </Route>  \r\n        <Route path=\"/user\" exact>\r\n          <div style={{ padding: '30px' }}>          \r\n            <UserMenuPage />\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreateMenuPage />\r\n        </Route>\r\n        <Route path=\"/create_mat\" exact>\r\n          <CreateMenuPageMat />\r\n        </Route>       \r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    )\r\n  // }\r\n\r\n  // return (\r\n  //   <Switch>\r\n  //     <Route path=\"/\" exact>\r\n  //       <div style={{ padding: '30px' }}>\r\n  //         <h1>Material Table Example</h1>\r\n  //         <MTable />\r\n  //       </div>\r\n  //     </Route>\r\n  //     <Redirect to=\"/\" />\r\n  //   </Switch>\r\n  // )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}